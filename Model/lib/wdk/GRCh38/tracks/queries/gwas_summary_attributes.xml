<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>

    <querySet name="GwasDatasetAttributes" 
        queryType="attribute" 
        isCacheable="false">

        <defaultTestParamValues>
            <paramValue name="dataset_id">NG00027</paramValue>
        </defaultTestParamValues>

        <testRowCountSql>
      select count(*) from NIAGADS.ResourceAttributes
        </testRowCountSql>


        <!-- =============================================================== -->
        <!-- Basic Attributes -->
        <!-- =============================================================== -->

        <sqlQuery name="BasicAttributes">
            <column name="track"/>
            <column name="project_id"/>
            <column name="accession_link"/>
            <column name="niagads_accession"/>
            <column name="name"/>
            <column name="attribution"/>
            <column name="description"/>
            <column name="category"/>
            <column name="is_adsp"/>
            <column name="search_link"/>
	    <column name="phenotype_list"/>
	    <column name="covariate_list"/>
            <sql>
                <![CDATA[
                        SELECT track,
                        '@PROJECT_ID@'::text AS project_id,
                        name,
                        attribution,
                        description,
                        build_link_attribute(dataset_accession, '/record/dataset/') AS accession_link,
                        dataset_accession AS niagads_accession,
                        category,
                        build_link_attribute('View top variants', 
			'../search/gwas_summary/filter?autoRun' || '&' || 'gwas_accession=' || dataset_accession 
			|| '&' || 'gwas_dataset=' || track || '&' || 'pvalue=5e-8',
			'retrieve variants with genome-wide significance in this dataset') AS search_link,

                        CASE WHEN dataset_accession LIKE '%ADSP%' 
			THEN build_icon_attribute('ADSP', 'fa-check-square-o', 'red', NULL, true::text)::text 
			ELSE NULL END AS is_adsp
                        FROM NIAGADS.TrackAttributes
                    ]]>
            </sql>
        </sqlQuery>

	<sqlQuery name="CovariateList">
	  <column name="track"/>
	  <column name="project_id"/>
	  <column name="covariate_list"/>
	  <sql>
	    <![CDATA[
		     SELECT ta.track, '@PROJECT_ID@'::text AS project_id, characteristic AS covariate_list
		     FROM NIAGADS.TrackAttributes ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic c
		     ON c.protocol_app_node_id = ta.protocol_app_node_id
		     AND characteristic_type = 'covariate_list'
	    ]]>
	  </sql>
	</sqlQuery>

	<sqlQuery name="PhenotypeList">
	  <column name="track"/>
	  <column name="project_id"/>
	  <column name="phenotype_list"/>
	  <sql>
	    <![CDATA[
		     SELECT ta.track, '@PROJECT_ID@'::text AS project_id, characteristic AS phenotype_list
		     FROM NIAGADS.TrackAttributes ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic c
		     ON c.protocol_app_node_id = ta.protocol_app_node_id
		     AND characteristic_type = 'phenotype_list'
	    ]]>
	  </sql>
	</sqlQuery>

   <sqlQuery name="RelatedTracks">
            <column name="track" columnType="string"/>
            <column name="project_id" columnType="string"/>
            <column name="related_tracks" columnType="string"/>
            <sql>
            <![CDATA[
            WITH id AS (##WDK_ID_SQL##)
SELECT id.track, '@PROJECT_ID@'::text AS project_id,
jsonb_agg(record_link('track', ta.track, name, true)::jsonb ORDER BY name) AS related_tracks
FROM NIAGADS.TrackAttributes ta, id
WHERE split_part(id.track, '_', 1) = ta.dataset_accession
AND ta.track != id.track
GROUP BY id.track
            ]]>
            </sql>
            </sqlQuery>

	
        <sqlQuery name="HasManhattanPlot">
            <column name="track" columnType="string"/>
            <column name="project_id" columnType="string"/>
            <column name="has_manhattan_plot" columnType="boolean"/>

            <sql>
                <![CDATA[
                WITH id AS (##WDK_ID_SQL##)
                SELECT id.track, '@PROJECT_ID@'::text AS project_id,
                tm.track = id.track AS has_manhattan_plot
                FROM id LEFT OUTER JOIN NIAGADS.TrackManhattan tm
                ON id.track = tm.track LIMIT 1
                ]]>
        </sql>
        </sqlQuery>

        <sqlQuery name="TopGenes">
            <column name="top_gene_list" columnType="string"/>
            <column name="project_id" columnType="string"/>
            <column name="track" columnType="string"/>
            <sql>
                <![CDATA[
  WITH datasets AS (  ##WDK_ID_SQL## ),
            genes as (                      
                        SELECT datasets.track,
                      
                        v.msc_impacted_gene_link AS gene_link, -- virtual column
                        max(neg_log10_pvalue) as max_p
                        FROM 
                        Results.VariantGWAS r,
                        NIAGADS.Variant v,
                        Study.ProtocolAppNode pan,
                        Datasets
                        WHERE pan.source_id = datasets.track
                        AND r.protocol_app_node_id = pan.protocol_app_node_id
                        AND r.neg_log10_pvalue >= abs(log(5e-8))
                        AND v.variant_id = r.variant_id
                        GROUP BY datasets.track, v.msc_impacted_gene_link),
      unique_genes AS  (
                        SELECT
            genes.track,
            (FIRST_VALUE(gene_link) OVER (PARTITION BY gene_link ORDER BY max_p DESC))::jsonb AS gene_link,
            FIRST_VALUE(max_p) OVER (PARTITION BY gene_link ORDER BY max_p DESC) AS max_p
                FROM genes 
                WHERE gene_link IS NOT NULL) 
                SELECT track,
                jsonb_agg(gene_link ORDER BY max_p DESC)::text AS top_gene_list
                FROM unique_genes
                GROUP BY track
                
            ]]>
            </sql>
        </sqlQuery>
    </querySet>



</wdkModel>
