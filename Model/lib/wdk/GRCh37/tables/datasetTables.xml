<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>

   <querySet name="DatasetTables" queryType="table" isCacheable="false">

    
    <!-- =============================================================== -->
    <!-- Basic Attributes -->
    <!-- =============================================================== -->

    <sqlQuery name="gwas">
      <column name="source" columnType="string"/>
      <column name="track" columnType="string"/>
      <column name="dataset_record_link" columnType="string"/>
      <column name="name" columnType="string"/>
      <column name="consortium" columnType="string"/>
      <column name="description" columnType="string"/>
      <column name="attribution" columnType="string"/>
	  <column name="publication_date" columnType="string"/>
      <column name="dataset_accession" columnType="string"/>
      <column name="biomarker" columnType="string"/>
      <column name="neuropathology" columnType="string"/>
      <column name="population" columnType="string"/>
      <column name="covariates" columnType="string"/>
      <column name="genotype" columnType="string"/>
      <sql>
        <![CDATA[
		 WITH id AS (##WDK_ID_SQL##),
		 
		 tracks AS (SELECT id.source, ta.*
		 FROM NIAGADS.TrackAttributes ta, id 
		 WHERE NOT (ta.track = ANY(string_to_array('@GWAS_CATALOG_ACCESSIONS@', ',')))
		 AND ta.dataset_accession != '@ADSP_CC_ACCESSION@' 
		 AND ta.subcategory = 'GWAS summary statistics'),

		 neuropathology AS (
		 SELECT ta.source, ta.track, /* tc.category_abbrev, tc.characteristic, */
		 string_agg(DISTINCT tc.category || CASE WHEN tc.category_abbrev = 'Other Neuropathology' THEN '' ELSE ' (' || tc.category_abbrev || ')' END, ' // ') AS characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.NeuropathologyTrackCategories tc
		 ON ta.track = tc.track
		 AND tc.characteristic_type IN ('neuropathology', 'diagnosis')
		 GROUP BY ta.source, ta.track),
		 
		 biomarker AS (
		 SELECT ta.source, ta.track, tc.category_abbrev, tc.category, tc.characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.NeuropathologyTrackCategories tc
		 ON ta.track = tc.track
		 AND tc.characteristic_type IN ('biomarker')
		 ),
		 
		 population AS (
		 SELECT ta.source, ta.track, string_agg(DISTINCT tc.characteristic, ' // ') AS characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type = 'population'
		 GROUP BY ta.source, ta.track),
		 
		 covariates AS (
		 SELECT ta.source, ta.track, tc.characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type = 'covariate_list'),
		 
		 genotype AS (
		 SELECT ta.source, ta.track, tc.characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type  IN ('APOE carrier status'))
		 
		 SELECT ta.source, ta.track, 
		 CASE WHEN ta.name LIKE '%IGAP%' THEN 'IGAP'
		 WHEN ta.name LIKE '%ADSP%' THEN 'ADSP'
		 WHEN ta.name LIKE '%ADGC%' THEN 'ADGC'
		 ELSE NULL END AS consortium,
		 ta.name,
		 build_link_attribute(ta.name, '../track/', ta.track) AS dataset_record_link,
		 split_part(ta.description, '; adjusted', 1) AS description, -- remove covariates from single variant study descriptions
		 ta.attribution, 
		 
		 -- should get the last "word" in the string; the date, but sometimes there is no date, so make sure the last word is a 
		 -- number before converting
		 CASE WHEN regexp_replace(ta.attribution, '^.* ', '')  ~ '^[0-9\.]+$'
		 THEN regexp_replace(ta.attribution, '^.* ', '')::numeric ELSE NULL END AS publication_date,
		 ta.dataset_accession, 
		 CASE WHEN n.characteristic IS NULL THEN 'Alzheimer''s disease/late onset AD (AD/LOAD)' ELSE n.characteristic END AS neuropathology,
		 b.characteristic AS biomarker,
		 CASE WHEN p.characteristic IS NULL THEN 'European' ELSE p.characteristic END AS population, -- patch for missing data
		 c.characteristic AS covariates,
		 g.characteristic AS genotype
		 FROM neuropathology n, biomarker b, population p, covariates c, genotype g, tracks ta
		 WHERE n.track = g.track
		 AND n.track = b.track
		 AND n.track = p.track
		 AND n.track = c.track
		 AND ta.track = n.track
		 ORDER BY publication_date DESC NULLS LAST, ta.attribution, consortium, ta.dataset_accession, ta.track
	]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="rare_variants">
      <column name="source" columnType="string"/>
      <column name="track" columnType="string"/>
      <column name="name" columnType="string"/>
      <column name="consortium" columnType="string"/>
      <column name="description" columnType="string"/>
      <column name="attribution" columnType="string"/>
      <column name="dataset_accession_link" columnType="string"/>
      <column name="dataset_accession" columnType="string"/>
      <column name="neuropathology" columnType="string"/>
      <column name="population" columnType="string"/>
      <column name="covariates" columnType="string"/>
      <sql>
        <![CDATA[
		 WITH id AS (##WDK_ID_SQL##),
		 
		 tracks AS (SELECT id.source, ta.*
		 FROM NIAGADS.TrackAttributes ta, id 
		 WHERE ta.dataset_accession = '@ADSP_CC_ACCESSION@' 
		 AND ta.subcategory = 'GWAS summary statistics'),

		 neuropathology AS (
		 SELECT ta.source, ta.track, /* tc.category_abbrev, tc.characteristic, */
		 string_agg(DISTINCT tc.category || CASE WHEN tc.category_abbrev = 'Other Neuropathology' THEN '' ELSE ' (' || tc.category_abbrev || ')' END, ' // ') AS characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.NeuropathologyTrackCategories tc
		 ON ta.track = tc.track
		 AND tc.characteristic_type IN ('neuropathology', 'diagnosis')
		 GROUP BY ta.source, ta.track),
		 
		 population AS (
		 SELECT ta.source, ta.track, string_agg(DISTINCT tc.characteristic, ' // ') AS characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type = 'population'
		 GROUP BY ta.source, ta.track),
		 
		 covariates AS (
		 SELECT ta.source, ta.track, tc.characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type = 'covariate_list')
		 		 
		 SELECT ta.source, ta.track, 
		 CASE WHEN ta.name LIKE '%IGAP%' THEN 'IGAP'
		 WHEN ta.name LIKE '%ADSP%' THEN 'ADSP'
		 WHEN ta.name LIKE '%ADGC%' THEN 'ADGC'
		 ELSE NULL END AS consortium,
		 ta.name,
		 build_link_attribute(ta.dataset_accession, '@NIAGADS_BASE_URL@/datasets/', ta.dataset_accession) AS dataset_accession_link,
		 split_part(ta.description, '; adjusted', 1) AS description, -- remove covariates from single variant study descriptions
		 ta.attribution, ta.dataset_accession, 
		 CASE WHEN n.characteristic IS NULL THEN 'Alzheimer''s disease/late onset AD (AD/LOAD)' ELSE n.characteristic END AS neuropathology,

		 CASE WHEN p.characteristic IS NULL THEN 'European' ELSE p.characteristic END AS population, -- patch for missing data
		 c.characteristic AS covariates
		 FROM neuropathology n, population p, covariates c, tracks ta
		 WHERE n.track = p.track
		 AND n.track = c.track
		 AND ta.track = n.track
		 ORDER BY consortium, ta.dataset_accession, ta.track
	]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="gene_risk">
      <column name="source" columnType="string"/>
      <column name="track" columnType="string"/>
      <column name="name" columnType="string"/>
      <column name="consortium" columnType="string"/>
      <column name="description" columnType="string"/>
      <column name="attribution" columnType="string"/>
      <column name="dataset_accession_link" columnType="string"/>
      <column name="dataset_accession" columnType="string"/>
      <column name="neuropathology" columnType="string"/>
      <column name="population" columnType="string"/>
      <column name="covariates" columnType="string"/>
      <sql>
        <![CDATA[
		 WITH id AS (##WDK_ID_SQL##),
		 
		 tracks AS (SELECT id.source, ta.*
		 FROM NIAGADS.TrackAttributes ta, id 
		 WHERE ta.dataset_accession = '@ADSP_CC_ACCESSION@' 
		 AND ta.subcategory != 'GWAS summary statistics'),

		 neuropathology AS (
		 SELECT ta.source, ta.track, /* tc.category_abbrev, tc.characteristic, */
		 string_agg(DISTINCT tc.category || CASE WHEN tc.category_abbrev = 'Other Neuropathology' THEN '' ELSE ' (' || tc.category_abbrev || ')' END, ' // ') AS characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.NeuropathologyTrackCategories tc
		 ON ta.track = tc.track
		 AND tc.characteristic_type IN ('neuropathology', 'diagnosis')
		 GROUP BY ta.source, ta.track),
		 
		 population AS (
		 SELECT ta.source, ta.track, string_agg(DISTINCT tc.characteristic, ' // ') AS characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type = 'population'
		 GROUP BY ta.source, ta.track),
		 
		 covariates AS (
		 SELECT ta.source, ta.track, tc.characteristic
		 FROM tracks ta LEFT OUTER JOIN NIAGADS.ProtocolAppNodeCharacteristic tc
		 ON ta.track = tc.track
		 AND characteristic_type = 'covariate_list')
		 		 
		 SELECT ta.source, ta.track, 
		 CASE WHEN ta.name LIKE '%IGAP%' THEN 'IGAP'
		 WHEN ta.name LIKE '%ADSP%' THEN 'ADSP'
		 WHEN ta.name LIKE '%ADGC%' THEN 'ADGC'
		 ELSE NULL END AS consortium,
		 ta.name,
		 build_link_attribute(ta.dataset_accession, '@NIAGADS_BASE_URL@/datasets/', ta.dataset_accession) AS dataset_accession_link,
		 split_part(ta.description, '; adjusted', 1) AS description, -- remove covariates from single variant study descriptions
		 ta.attribution, ta.dataset_accession, 
		 CASE WHEN n.characteristic IS NULL THEN 'Alzheimer''s disease/late onset AD (AD/LOAD)' ELSE n.characteristic END AS neuropathology,

		 CASE WHEN p.characteristic IS NULL THEN 'European' ELSE p.characteristic END AS population, -- patch for missing data
		 c.characteristic AS covariates
		 FROM neuropathology n, population p, covariates c, tracks ta
		 WHERE n.track = p.track
		 AND n.track = c.track
		 AND ta.track = n.track
		 ORDER BY consortium, ta.dataset_accession, ta.track
	]]>
      </sql>
    </sqlQuery>
  </querySet>
</wdkModel>
