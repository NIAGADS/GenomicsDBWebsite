import { RecordTableProperties } from "./_recordTableProperties";

export const _geneTableProperties: { [name: string]: RecordTableProperties } = {
    ad_variants_from_gwas: {
        filters: {
            pvalue: "pvalue",
            adsp_variant_flag: "pie",
            gene_impact: "pie",
            gene_consequence: "pie",
            relative_position: "pie",
            population: "pie",
            biomarker: "select",
            tissue: "select",
            covariates: "multi_select",
        },
        filterGroups: {
            Statistics: ["pvalue"],
            Position: ["relative_position"],
            Annotation: ["adsp_variant_flag", "gene_impact", "gene_consequence"],
            Phenotype: ["population", "biomarker", "genotype", "tissue", "covariates"],
        },
        defaultFilter: "pvalue",
        hiddenColumns: [
            "population",
            "diagnosis",
            "neuropathology",
            "covariates",
            "gender",
            "genotype",
            "biomarker",
            "tissue",
        ],
        requiredColumns: ["track", "variant_link", "pvalue"],
        defaultOpen: true,
        canFilter: true,
        canToggleColumns: true,
        sortedBy: [{ id: "pvalue", descending: false }],
    },
    other_variants_from_gwas: {
        filters: {
            pvalue: "pvalue",
            adsp_variant_flag: "pie",
            gene_impact: "pie",
            gene_consequence: "pie",
            relative_position: "pie",
            diagnosis: "pie",
            neuropathology: "pie",
            population: "pie",
            biomarker: "select",
            tissue: "select",
            covariates: "multi_select",
        },
        filterGroups: {
            Statistics: ["pvalue"],
            Position: ["relative_position"],
            Annotation: ["adsp_variant_flag", "gene_impact", "gene_consequence"],
            Phenotype: [
                "population",
                "diagnosis",
                "neuropathology",
                "biomarker",
                "genotype",
                "tissue",
                "covariates",
            ],
        },
        defaultFilter: "pvalue",
        hiddenColumns: ["population", "covariates", "gender", "genotype", "biomarker", "tissue"],
        requiredColumns: ["track", "variant_link", "pvalue", "diagnosis", "neuropathology"],
        defaultOpen: false,
        canFilter: true,
        canToggleColumns: true,
        sortedBy: [{ id: "pvalue", descending: false }],
    },
    ad_variants_from_catalog: {
        filters: {
            pvalue: "pvalue",
            adsp_variant_flag: "pie",
            gene_impact: "pie",
            gene_consequence: "pie",
            relative_position: "pie",
            source: "select",
        },
        filterGroups: {
            Statistics: ["pvalue"],
            Position: ["relative_position"],
            Annotation: ["source", "adsp_variant_flag", "gene_impact", "gene_consequence"],
        },
        defaultFilter: "pvalue",
        hiddenColumns: ["source", "sample", "replicate_sample", "pubmed_id", "frequency"],
        requiredColumns: ["variant_link", "pvalue", "trait", "study"],
        defaultOpen: false,
        canFilter: true,
        canToggleColumns: true,
        sortedBy: [{ id: "pvalue", descending: false }],
    },
    other_variants_from_catalog: {
        filters: {
            pvalue: "pvalue",
            adsp_variant_flag: "pie",
            gene_impact: "pie",
            gene_consequence: "pie",
            relative_position: "pie",
            source: "select",
        },
        filterGroups: {
            Statistics: ["pvalue"],
            Position: ["relative_position"],
            Annotation: ["source", "adsp_variant_flag", "gene_impact", "gene_consequence"],
        },
        hiddenColumns: ["source", "sample", "replicate_sample", "pubmed_id", "frequency"],
        requiredColumns: ["variant_link", "pvalue", "trait", "study"],
        defaultOpen: false,
        canFilter: true,
        canToggleColumns: true,
        sortedBy: [{ id: "pvalue", descending: false }],
    },
    go_terms: {
        filters: {
            go_evidence_code: "select",
            ontology: "select",
        },
        filterGroups: {
            Annotation: ["go_evidence_code", "ontology"],
        },
        defaultOpen: false,
        canFilter: true,
        canToggleColumns: false,
    },
    pathways: {
        defaultOpen: false,
        canFilter: true,
        canToggleColumns: false,
    },
};